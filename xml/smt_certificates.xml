<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
          [
          <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
          <!ENTITY % entities SYSTEM "entity-decl.ent">
          %entities;
]>
<sect1>
 <title>Server Certificates</title>

 <para>
  For communication between the &smt; server and client machines, the
  encrypted HTTPS protocol is used, requiring a server certificate. If the
  certificate is not available, or if clients are not configured to use the
  certificate, the communication between server and clients will fail.
 </para>

 <para>
  Every client must be able to verify the server certificate by trusting the
  CA (certificate authority) certificate which signed the server
  certificate. Therefore, the &smt; server provides a copy of the CA at
  <filename>/srv/www/htdocs/smt.crt</filename>. This CA can be downloaded
  from every client via the URL
  <literal>http://<replaceable>FQDN</replaceable>/smt.crt</literal>. The
  copy is created when &yast; writes the &smt; configuration. Whenever &smt;
  is started with the <command>rcsmt</command> init script, it checks the
  certificate. If a new CA certificate exists, it is copied again.
  Therefore, whenever the CA certificate is changed, restart &smt; using the
  <command>rcsmt restart</command> command.
 </para>

 <para>
  When the &smt; Server module applies configuration changes, it checks for
  the existence of the common server certificate. If the certificate does
  not exist, &yast; asks whether the certificate should be created. If the
  user confirms, the &yast; CA Management module is started.
 </para>

 <sect2>
  <title>Certificate Expiration</title>
  <para>
   The common server certificate &smt; uses is valid for one year. After
   that time, a new certificate is needed. Either generate a new certificate
   using &yast; CA Management module or import a new certificate using the
   &yast; Common Server Certificate module. Both options are described in
   the following sections.
  </para>
  <para>
   As long as the same CA certificate is used, there is no need to update
   certificates at the client machines. The generated CA certificate is
   valid for 10 years.
  </para>
 </sect2>

 <sect2 id="smt.certificate.creating">
  <title>Creating a New Common Server Certificate</title>
  <para>
   To create a new common server certificate with &yast;, proceed as
   follows:
  </para>
  <procedure>
   <step>
    <para>
     Start &yast; and select <menuchoice> <guimenu>Security and
     Users</guimenu> <guimenu>CA Management</guimenu> </menuchoice>.
     Conversely, start the &yast; CA Management module from a command line
     by entering <command>yast2 ca_mgm</command> as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Select the required CA and click <guimenu>Enter CA</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter the password if entering a CA for the first time. &yast; displays
     the CA key information in the <guimenu>Description</guimenu> tab.
    </para>
   </step>
   <step>
    <para>
     Click the <guimenu>Certificates</guimenu> tab (see
     <xref linkend="fig.yast.ca.cert"/>) and select <menuchoice>
     <guimenu>Add</guimenu> <guimenu>Add Server Certificate</guimenu>
     </menuchoice>.
    </para>
    <figure id="fig.yast.ca.cert">
     <title>Certificates of a CA</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_ca_cert.png" width="75%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_ca_cert.png" width="75%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step id="step.new.cert1">
    <para>
     Enter the fully qualified domain name of the server as <guimenu>Common
     Name</guimenu>. Add a valid e-mail address of the server administrator.
     Other fields, as <guimenu>Organization</guimenu>,
     <guimenu>Organizational Unit</guimenu>, <guimenu>Locality</guimenu>,
     and <guimenu>State</guimenu> are optional. Click
     <guimenu>Next</guimenu> to proceed.
    </para>
    <important>
     <title>Hostname in Server Certificate</title>
     <para>
      The server certificate must contain the correct hostname. If the
      client requests server <literal>https://some.hostname/</literal>, then
      <literal>some.hostname</literal> must be part of the certificate. The
      hostname must either be used as the <guimenu>Common Name</guimenu>,
      see <xref linkend="step.new.cert1"/>, or as the <guimenu>Subject
      Alternative Name</guimenu>, see
      <xref
       linkend="step.new.cert2"/>:<literal>DNS:some.hostname</literal>
      and/or
      <literal>IP:<replaceable>&lt;ipaddress&gt;</replaceable></literal>.
     </para>
    </important>
   </step>
   <step>
    <para>
     Enter a <guimenu>Password</guimenu> for the private key of the
     certificate and reenter it in the next field to verify it.
    </para>
   </step>
   <step id="step.new.cert2">
    <para>
     If you want to define a <guimenu>Subject Alternative Name</guimenu>,
     click <guimenu>Advanced Options</guimenu>, select <guimenu>Subject
     Alternative Name</guimenu> from the list and click
     <guimenu>Add</guimenu>.
    </para>
   </step>
   <step>
    <para>
     If you want to keep the default values for the other options, like
     <guimenu>Key Length</guimenu> and <guimenu>Valid Period</guimenu>,
     click <guimenu>Next</guimenu>. An overview of the certificate to be
     created is shown.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Create</guimenu> to generate the certificate.
    </para>
   </step>
   <step>
    <para>
     To export the new certificate as the common server certificate, select
     it in the <guimenu>Certificates</guimenu> tab and select <menuchoice>
     <guimenu>Export</guimenu> <guimenu>Export as Common Server
     Certificate</guimenu> </menuchoice>.
    </para>
   </step>
   <step>
    <para>
     After having created a new certificate, restart &smt; using the
     <command>rcsmt restart</command> command. Restarting &smt; ensures that
     the new certificate is copied from
     <filename>/etc/ssl/certs/YaST-CA.pem</filename> to
     <filename>/srv/www/htdocs/smt.crt</filename>, the copy &smt; uses.
     Restarting &smt; also restarts the Web server.
    </para>
   </step>
  </procedure>
  <para>
   For detailed information about managing certification and further usage
   of the &yast; CA Management module and the Common Sever Certificate
   module, refer to the &admin;.
  </para>
 </sect2>

 <sect2 id="smt.certificate.importing">
  <title>Importing a Common Server Certificate</title>
  <para>
   You can import an own common server certificate from a file. The
   certificate to be imported has to be in the PKCS12 format with CA chain.
   Common server certificates can be imported with the &yast; Common Server
   Certificate module.
  </para>
  <para>
   To import an own certificate with &yast;, proceed as follows:
  </para>
  <procedure>
   <step>
    <para>
     Start &yast; and select <menuchoice> <guimenu>Security and
     Users</guimenu> <guimenu>Common Server Certificate</guimenu>
     </menuchoice>. Conversely, start the &yast; Common Server Certificate
     module from the command line by entering <command>yast2
     common_cert</command> as &rootuser;.
    </para>
    <para>
     The description of the currently used common server certificate is
     shown in the dialog that opens.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Import</guimenu> and select the file containing the
     certificate to be imported. Specify the certificate password in the
     <guimenu>Password</guimenu> field.
    </para>
   </step>
   <step>
    <para>
     Press <guimenu>Next</guimenu>. If the certificate is successfully
     imported, close &yast; with <guimenu>Finish</guimenu>.
    </para>
   </step>
   <step>
    <para>
     After having created a new certificate, restart &smt; using the
     <command>rcsmt restart</command> command. Restarting &smt; ensures that
     the new certificate is copied from
     <filename>/etc/ssl/certs/YaST-CA.pem</filename> to
     <filename>/srv/www/htdocs/smt.crt</filename>, the copy &smt; uses.
     Restarting &smt; also restarts the Web server.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2>
  <title>Synchronizing Time Between &smt; Server and Clients</title>
  <para>
   There is no need for a precise synchronization of time between the &smt;
   server and clients. However, each server certificate has a validity
   period. If the client happens to be set to a time outside of this period,
   the certificate validation on the client side fails.
  </para>
  <para>
   Therefore, it is advisable to keep the time on the server and clients
   synchronized. You can easily synchronize time using NTP (network time
   protocol). Use <command>yast2 ntp-client</command> to configure an NTP
   client. You will find detailed information about NTP in &admin;.
  </para>
 </sect2>
</sect1>
